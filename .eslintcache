[{"C:\\mywork\\pet\\e_commerce\\src\\index.js":"1","C:\\mywork\\pet\\e_commerce\\src\\App.jsx":"2","C:\\mywork\\pet\\e_commerce\\src\\components\\Products\\Products.jsx":"3","C:\\mywork\\pet\\e_commerce\\src\\components\\Products\\Product\\Product.jsx":"4","C:\\mywork\\pet\\e_commerce\\src\\components\\Products\\Product\\styles.js":"5","C:\\mywork\\pet\\e_commerce\\src\\components\\index.js":"6","C:\\mywork\\pet\\e_commerce\\src\\components\\Navbar\\Navbar.jsx":"7","C:\\mywork\\pet\\e_commerce\\src\\components\\Navbar\\styles.js":"8","C:\\mywork\\pet\\e_commerce\\src\\components\\Products\\styles.js":"9","C:\\mywork\\pet\\e_commerce\\src\\lib\\commerce.js":"10","C:\\mywork\\pet\\e_commerce\\src\\components\\Cart\\Cart.jsx":"11","C:\\mywork\\pet\\e_commerce\\src\\components\\Cart\\styles.js":"12","C:\\mywork\\pet\\e_commerce\\src\\components\\Cart\\CartItem\\CartItem.jsx":"13","C:\\mywork\\pet\\e_commerce\\src\\components\\Cart\\CartItem\\styles.js":"14","C:\\mywork\\pet\\e_commerce\\src\\components\\CheckoutForm\\Checkout\\Checkout.jsx":"15","C:\\mywork\\pet\\e_commerce\\src\\components\\CheckoutForm\\Checkout\\styles.js":"16","C:\\mywork\\pet\\e_commerce\\src\\components\\CheckoutForm\\AddressForm.jsx":"17","C:\\mywork\\pet\\e_commerce\\src\\components\\CheckoutForm\\PaymentForm.jsx":"18","C:\\mywork\\pet\\e_commerce\\src\\components\\CheckoutForm\\CustomTextField.jsx":"19","C:\\mywork\\pet\\e_commerce\\src\\components\\CheckoutForm\\Review.jsx":"20"},{"size":151,"mtime":1610314949037,"results":"21","hashOfConfig":"22"},{"size":3353,"mtime":1610926074712,"results":"23","hashOfConfig":"22"},{"size":1135,"mtime":1610495566493,"results":"24","hashOfConfig":"22"},{"size":1503,"mtime":1610496031570,"results":"25","hashOfConfig":"22"},{"size":408,"mtime":1610403587973,"results":"26","hashOfConfig":"22"},{"size":225,"mtime":1610633270591,"results":"27","hashOfConfig":"22"},{"size":2126,"mtime":1610578962337,"results":"28","hashOfConfig":"22"},{"size":1580,"mtime":1610457737810,"results":"29","hashOfConfig":"22"},{"size":300,"mtime":1610458498646,"results":"30","hashOfConfig":"22"},{"size":127,"mtime":1610468210915,"results":"31","hashOfConfig":"22"},{"size":2941,"mtime":1610920812770,"results":"32","hashOfConfig":"22"},{"size":667,"mtime":1610659548470,"results":"33","hashOfConfig":"22"},{"size":1927,"mtime":1610918658405,"results":"34","hashOfConfig":"22"},{"size":495,"mtime":1610577665621,"results":"35","hashOfConfig":"22"},{"size":4398,"mtime":1610930067470,"results":"36","hashOfConfig":"22"},{"size":1210,"mtime":1610928568958,"results":"37","hashOfConfig":"22"},{"size":6747,"mtime":1610918262330,"results":"38","hashOfConfig":"22"},{"size":3087,"mtime":1610929921081,"results":"39","hashOfConfig":"22"},{"size":555,"mtime":1610927913624,"results":"40","hashOfConfig":"22"},{"size":1287,"mtime":1610918009546,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"kju7c1",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"C:\\mywork\\pet\\e_commerce\\src\\index.js",[],["85","86"],"C:\\mywork\\pet\\e_commerce\\src\\App.jsx",[],"C:\\mywork\\pet\\e_commerce\\src\\components\\Products\\Products.jsx",[],"C:\\mywork\\pet\\e_commerce\\src\\components\\Products\\Product\\Product.jsx",[],"C:\\mywork\\pet\\e_commerce\\src\\components\\Products\\Product\\styles.js",[],"C:\\mywork\\pet\\e_commerce\\src\\components\\index.js",[],"C:\\mywork\\pet\\e_commerce\\src\\components\\Navbar\\Navbar.jsx",["87","88"],"import React from \"react\";\r\nimport {\r\n    AppBar,\r\n    Toolbar,\r\n    Badge,\r\n    IconButton,\r\n    MenuItem,\r\n    Menu,\r\n    Typography,\r\n} from \"@material-ui/core\";\r\nimport { ShoppingCart } from \"@material-ui/icons\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\n\r\nimport logo from \"../../assests/commerce.png\";\r\nimport useStyles from \"./styles\";\r\n\r\nconst Navbar = ({ totalItems }) => {\r\n    const classes = useStyles();\r\n    const location = useLocation();\r\n\r\n    return (\r\n        <>\r\n            <AppBar position=\"fixed\" className={classes.appBar} color=\"inherit\">\r\n                <Toolbar>\r\n                    <Typography\r\n                        component={Link}\r\n                        to=\"/\"\r\n                        variant=\"h6\"\r\n                        className={classes.title}\r\n                        color=\"inherit\"\r\n                    >\r\n                        <img\r\n                            src={logo}\r\n                            alt=\"E-Commerce.JS\"\r\n                            height=\"25px\"\r\n                            className={classes.image}\r\n                        />\r\n                        E-Commerce.JS\r\n                    </Typography>\r\n                    <div className={classes.grow} />\r\n\r\n                    {\r\n                        location.pathname === '/' && (\r\n                    <div className={classes.button}>\r\n                        {/* <Link to=\"/cart\">Some components go to cart. Way without materialUI </Link> */}\r\n\r\n                        <IconButton\r\n                            component={Link}\r\n                            to=\"/cart\"\r\n                            aria-label=\"Show cart items\"\r\n                            color=\"inherit\"\r\n                        >\r\n                            <Badge badgeContent={totalItems} color=\"secondary\">\r\n                                <ShoppingCart />\r\n                            </Badge>\r\n                        </IconButton>\r\n                    </div>\r\n                        )\r\n                    }\r\n                </Toolbar>\r\n            </AppBar>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Navbar;\r\n","C:\\mywork\\pet\\e_commerce\\src\\components\\Navbar\\styles.js",[],"C:\\mywork\\pet\\e_commerce\\src\\components\\Products\\styles.js",[],"C:\\mywork\\pet\\e_commerce\\src\\lib\\commerce.js",[],"C:\\mywork\\pet\\e_commerce\\src\\components\\Cart\\Cart.jsx",[],"C:\\mywork\\pet\\e_commerce\\src\\components\\Cart\\styles.js",[],"C:\\mywork\\pet\\e_commerce\\src\\components\\Cart\\CartItem\\CartItem.jsx",[],"C:\\mywork\\pet\\e_commerce\\src\\components\\Cart\\CartItem\\styles.js",[],"C:\\mywork\\pet\\e_commerce\\src\\components\\CheckoutForm\\Checkout\\Checkout.jsx",["89"],"C:\\mywork\\pet\\e_commerce\\src\\components\\CheckoutForm\\Checkout\\styles.js",[],"C:\\mywork\\pet\\e_commerce\\src\\components\\CheckoutForm\\AddressForm.jsx",["90","91"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n    InputLabel,\r\n    Select,\r\n    MenuItem,\r\n    Button,\r\n    Grid,\r\n    Typography,\r\n} from \"@material-ui/core\";\r\nimport { useForm, FormProvider } from \"react-hook-form\";\r\nimport FormInput from \"./CustomTextField\";\r\n\r\nimport { commerce } from \"../../lib/commerce\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst AddressForm = ({ checkoutToken, next, }) => {\r\n    // console.log(next())\r\n    const [shippingCountries, setShippingCountries] = useState([]);\r\n    const [shippingCountry, setShippingCountry] = useState(\"\");\r\n    const [shippingSubdivisions, setShippingSubdivisions] = useState([]);\r\n    const [shippingSubdivision, setShippingSubdivision] = useState(\"\");\r\n    const [shippingOptions, setShippingOptions] = useState([]);\r\n    const [shippingOption, setShippingOption] = useState(\"\");\r\n\r\n    const methods = useForm();\r\n\r\n    const countries = Object.entries(shippingCountries).map(([code, name]) => ({\r\n        id: code,\r\n        label: name,\r\n    }));\r\n    const subdivisions = Object.entries(\r\n        shippingSubdivisions\r\n    ).map(([code, name]) => ({ id: code, label: name }));\r\n    const options = shippingOptions.map((sO) => ({\r\n        id: sO.id,\r\n        label: `${sO.description} - (${sO.price.formatted_with_symbol}) `,\r\n    }));\r\n\r\n    const fetchShippingCountries = async (checkoutTokenId) => {\r\n        const {\r\n            countries,\r\n        } = await commerce.services.localeListShippingCountries(\r\n            checkoutTokenId\r\n        );\r\n\r\n        setShippingCountries(countries);\r\n        setShippingCountry(Object.keys(countries)[0]);\r\n    };\r\n\r\n    const fetchSubdivisions = async (countryCode) => {\r\n        const { subdivisions } = await commerce.services.localeListSubdivisions(\r\n            countryCode\r\n        );\r\n\r\n        setShippingSubdivisions(subdivisions);\r\n        setShippingSubdivision(Object.keys(subdivisions)[0]);\r\n    };\r\n\r\n    const fetchShippingOptions = async (\r\n        checkoutTokenId,\r\n        country,\r\n        region = 0\r\n    ) => {\r\n        const options = await commerce.checkout.getShippingOptions(checkoutTokenId, {\r\n            country,\r\n            region,\r\n        });\r\n\r\n        setShippingOptions(options);\r\n        setShippingOption(options[0].id);\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchShippingCountries(checkoutToken.id);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (shippingCountry) fetchSubdivisions(shippingCountry);\r\n    }, [shippingCountry]);\r\n\r\n    useEffect(() => {\r\n        if (shippingSubdivision)\r\n            fetchShippingOptions(\r\n                checkoutToken.id,\r\n                shippingCountry,\r\n                shippingSubdivision\r\n            );\r\n    }, [shippingSubdivision]);\r\n\r\n    return (\r\n        <>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n                Shipping Address\r\n            </Typography>\r\n            <FormProvider {...methods}>\r\n                <form onSubmit={methods.handleSubmit((data) => next( {...data, shippingCountry, shippingSubdivision, shippingOption}) )}>\r\n                    <Grid container spacing={3}>\r\n                        <FormInput name=\"firstName\" label=\"First name\" />\r\n                        <FormInput name=\"lastName\" label=\"Last name\" />\r\n                        <FormInput name=\"address1\" label=\"Address\" />\r\n                        <FormInput name=\"email\" label=\"Email\" />\r\n                        <FormInput name=\"city\" label=\"City\" />\r\n                        <FormInput name=\"zip\" label=\"Zip / Postal Code\" />\r\n\r\n                        <Grid item xs={12} sm={6}>\r\n                            <InputLabel>Shipping Country</InputLabel>\r\n                            <Select\r\n                                value={shippingCountry}\r\n                                fullWidth\r\n                                onChange={(e) =>\r\n                                    setShippingCountry(e.target.value)\r\n                                }\r\n                            >\r\n                                {countries.map((country) => (\r\n                                    <MenuItem\r\n                                        key={country.id}\r\n                                        value={country.id}\r\n                                    >\r\n                                        {country.label}\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12} sm={6}>\r\n                            <InputLabel>Shipping subdivision</InputLabel>\r\n                            <Select\r\n                                value={shippingSubdivision}\r\n                                fullWidth\r\n                                onChange={(e) =>\r\n                                    setShippingSubdivision(e.target.value)\r\n                                }\r\n                            >\r\n                                {subdivisions.map((subdivision) => (\r\n                                    <MenuItem\r\n                                        key={subdivision.id}\r\n                                        value={subdivision.id}\r\n                                    >\r\n                                        {subdivision.label}\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12} sm={6}>\r\n                            <InputLabel>Shipping options</InputLabel>\r\n                            <Select\r\n                                value={shippingOption}\r\n                                fullWidth\r\n                                onChange={(e) =>\r\n                                    setShippingOption(e.target.value)\r\n                                }\r\n                            >\r\n                                {options.map((option) => (\r\n                                    <MenuItem key={option.id} value={option.id}>\r\n                                        {option.label}\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <br/>\r\n                    <div style={{ display: 'flex', justifyContent: 'space-between'}}>\r\n                        <Button component={Link} to=\"/cart\" color=\"secondary\" variant=\"outlined\">Back to Cart</Button>\r\n                        <Button type=\"submit\" color=\"primary\" variant=\"contained\">Next</Button>\r\n                    </div>\r\n                </form>\r\n            </FormProvider>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AddressForm;\r\n","C:\\mywork\\pet\\e_commerce\\src\\components\\CheckoutForm\\PaymentForm.jsx",[],"C:\\mywork\\pet\\e_commerce\\src\\components\\CheckoutForm\\CustomTextField.jsx",[],"C:\\mywork\\pet\\e_commerce\\src\\components\\CheckoutForm\\Review.jsx",[],{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","severity":1,"message":"97","line":7,"column":5,"nodeType":"98","messageId":"99","endLine":7,"endColumn":13},{"ruleId":"96","severity":1,"message":"100","line":8,"column":5,"nodeType":"98","messageId":"99","endLine":8,"endColumn":9},{"ruleId":"101","severity":1,"message":"102","line":43,"column":8,"nodeType":"103","endLine":43,"endColumn":14,"suggestions":"104"},{"ruleId":"101","severity":1,"message":"105","line":75,"column":8,"nodeType":"103","endLine":75,"endColumn":10,"suggestions":"106"},{"ruleId":"101","severity":1,"message":"107","line":88,"column":8,"nodeType":"103","endLine":88,"endColumn":29,"suggestions":"108"},"no-native-reassign",["109"],"no-negated-in-lhs",["110"],"no-unused-vars","'MenuItem' is defined but never used.","Identifier","unusedVar","'Menu' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["111"],"React Hook useEffect has a missing dependency: 'checkoutToken.id'. Either include it or remove the dependency array.",["112"],"React Hook useEffect has missing dependencies: 'checkoutToken.id' and 'shippingCountry'. Either include them or remove the dependency array.",["113"],"no-global-assign","no-unsafe-negation",{"desc":"114","fix":"115"},{"desc":"116","fix":"117"},{"desc":"118","fix":"119"},"Update the dependencies array to be: [cart, history]",{"range":"120","text":"121"},"Update the dependencies array to be: [checkoutToken.id]",{"range":"122","text":"123"},"Update the dependencies array to be: [checkoutToken.id, shippingCountry, shippingSubdivision]",{"range":"124","text":"125"},[1288,1294],"[cart, history]",[2381,2383],"[checkoutToken.id]",[2729,2750],"[checkoutToken.id, shippingCountry, shippingSubdivision]"]